//main.cpp
#include <iostream>
#include "1.h"
#include "2.h"
using namespace std;

int main() {
	store A, B, C;
	A = store(4, 3, 3, 3, 800, 1000, 800, 1000);
	B = store(3, 3, 4, 4, 1000, 1200, 1000, 1200);
	C = A + B;
	B = C - A;
	cout << A.total() << " " << B.total() << endl;
	cout << C.total() << endl;
	return 123;
}

//fruit.h
#pragma once
#include <iostream>
using namespace std;

class fruit {
public:
	fruit();
	fruit(float p, int m);
	float price;
	int many;

	float calc();
	void show_all();
};

//fruit.cpp
#include "1.h"

fruit::fruit() {
	price = 200.; many = 2;
}

fruit::fruit(float p, int m) {
	price = p; many = m;
}

float fruit::calc() {
	return many * price;
}

void fruit::show_all() {
	cout << "price = " << this->price << endl;
	cout << "many = " << this->many << endl;
}

//store.h
#pragma once
#include "1.h"

class store {
public:
	store();
	store(int a, int b, int c, int d, float e, float f, float g, float h);
	fruit apple, pear, peach, banana;
	float total();
	float discount(float ratio);
	store operator+(store&);
	store operator-(store&);
};

//store.cpp
#include "2.h"

store::store() {};

store::store(int a, int b, int c, int d, float e, float f, float g, float h) {
	apple = fruit(e, a);
	pear = fruit(f, b);
	peach = fruit(g, c);
	banana = fruit(h, d);
}

float store::total() {
	float sum_price = apple.calc();
	sum_price += pear.calc();
	sum_price += peach.calc();
	sum_price += banana.calc();
	return sum_price;
}

float store::discount(float ratio) {
	float sum_price = this->total();
	return ((100 - ratio) / 100) * sum_price;
}

store store::operator+(store& b) {
	store c;
	c.apple.many = apple.many + b.apple.many;
	c.pear.many = pear.many + b.pear.many;
	c.peach.many = peach.many + b.peach.many;
	c.banana.many = banana.many + b.banana.many;
	if (apple.price < b.apple.price) c.apple.price = apple.price;
	else c.apple.price = b.apple.price;
	if (pear.price < b.pear.price) c.pear.price = pear.price;
	else c.pear.price = b.pear.price;
	if (peach.price < b.peach.price) c.peach.price = peach.price;
	else c.peach.price = b.peach.price;
	if (banana.price < b.banana.price) c.banana.price = banana.price;
	else c.banana.price = b.banana.price;
	return c;
}

store store::operator-(store& b) {
	store *c = this;
	store a;
	a.apple.many = c->apple.many - b.apple.many;
	a.pear.many = c->pear.many - b.pear.many;
	a.peach.many = c->peach.many - b.peach.many;
	a.banana.many = c->banana.many - b.banana.many;
	if (c->apple.price != b.apple.price) a.apple.price = c->apple.price;
	else a.apple.price = c->apple.price + 200;
	if (c->pear.price != b.pear.price) a.pear.price = c->pear.price;
	else a.pear.price = c->pear.price + 200;
	if (c->peach.price != b.peach.price) a.peach.price = c->peach.price;
	else a.peach.price = c->peach.price + 200;
	if (c->banana.price != b.banana.price) a.banana.price = c->banana.price;
	else a.banana.price = c->banana.price + 200;
	return a;
}
