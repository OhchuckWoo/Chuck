#include <iostream>
#include <fstream>
using namespace std;
const float pi = 3.141592;

float getfrequency(char n) {
	float f = 0.0;
	if (n == 'C') f = 523.25;
	else if (n == 'B') f = 493.88;
	else if (n == 'A') f = 440.00;
	else if (n == 'G') f = 392.00;
	else if (n == 'F') f = 349.23;
	else if (n == 'E') f = 329.63;
	else if (n == 'D') f = 293.66;
	else if (n == 'c') f = 261.63;
	return f;
}

float getAmplitude(float a) {
	float Amp = a * 10.0;
	return Amp;
}

float getLength(int l) {
	float T = 0.0;
	if (l == 4) T = 1.0;
	else if (l == 8) T = 0.5;
	else if (l == 16) T = 0.25;
	return T;
}

int main() {
	//Make my file
	ofstream xx("tiger.txt");
	if (!xx) return -1;
	int note[18] = { 4, 4, 8, 8, 8, 8, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4 };
	char freq[18] = { 'C', 'G', 'E', 'D', 'E', 'D', 'E', 'c', 'G', 'c', 'E', 'G', 'E', 'D', 'E', 'D', 'E', 'c' };
	float ampl[18] = { 10, 7.5, 5, 5, 5, 5,5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 };
	xx << 18 << endl;
	for (int i = 0; i < 18; i++) {
		xx << note[i] << freq[i] << ampl[i] << endl;
	}
	xx.close();

	ifstream ww("Beatles-LetItBe-wav_30s.wav", ios::binary | ios::in);
	if (!ww) return 999;  // if the file is not found
	char header[44];

	// Sprint 1
	ww.read(header, 44 * sizeof(char));
	int* sampleRate = (int*)(header + 24);
	cout << "   sampleRate = " << *sampleRate << endl;
	short* numChannels; numChannels = (short*)(header + 22);
	cout << "   numChannels = " << *numChannels << endl;
	int* byteRate; byteRate = (int*)(header + 28);
	cout << "   byteRate = " << *byteRate << endl;

	ifstream zz("tiger.txt");
	if (!zz) return -9;
	int N, eu;
	char hh;
	float ss, f, a, T;
	zz >> N;

	float dt = 1 / sampleRate[0];
	short* data;

	ofstream yy("tigerOnMountain.wav");
	yy.write(header, 44 * sizeof(char));
	if (!yy) return 0;
	for (int i = 0; i < N; i++) {
		zz >> eu >> hh >> ss;
		f = getfrequency(hh);
		a = getAmplitude(ss);
		T = getLength(eu);
		int S = *sampleRate * T;
		cout << f << " " << a << " " << T << endl; //여기까지는 원활하게 코딩
		data = new short[S];
		for (float t = 0; t < T; t += dt) {
			data[i] = (short)(a * sin(2.0 * pi * f * t));
		}
		yy.write((char*)data, i * sizeof(short));
	}
	yy.close();
	zz.close();
	ww.close();
	return 1;
}
